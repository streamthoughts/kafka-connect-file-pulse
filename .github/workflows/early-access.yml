#  Copyright 2023 The original authors
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at

#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
name: Early Access

on:
  push:
    branches: [ master ]

env:
  JAVA_VERSION: '11'
  JAVA_DISTRO: 'zulu'

jobs:
  build:
    if: github.repository == 'streamthoughts/kafka-connect-file-pulse'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true

      - name: 'Set up Java'
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}
          cache: 'maven'

      - name: 'Build Distribution'
        run: |
          ./mvnw -ntp -B --file pom.xml -Pall,dist package

      - name: 'Upload build artifact'
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            connect-file-pulse-plugin/target/components/packages/*.zip

  release:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub repository'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          clean: true

      - name: 'Download all artifacts'
        uses: actions/download-artifact@v3

      - name: 'Set up Java'
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}

      - name: 'Cache Maven packages'
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 'Configure Git'
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: 'Release with JReleaser'
        env:
          JRELEASER_BRANCH: master
          JRELEASER_GITHUB_TOKEN: ${{ secrets.PAT }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_SECRET_KEY:  ${{ secrets.GPG_PRIVATE_KEY }}
        run: ./mvnw -ntp -B --file ./pom.xml -Prelease -DartifactsDir=artifacts jreleaser:full-release

      - name: 'JReleaser output'
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-logs
          path: |
            target/jreleaser/trace.log
            target/jreleaser/output.properties
